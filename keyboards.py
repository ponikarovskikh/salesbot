from telebot import *
from telebot.types import *
from telebot.util import quick_markup
from sql import *

def menu_keyboard_1stage():
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True,one_time_keyboard=True)
    play_button = types.KeyboardButton('–ü—Ä–æ–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä')

    keyboard.add(play_button)

    return keyboard


def menu_keyboard_2stage():
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True,one_time_keyboard=True)
    func1 = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    func2=types.KeyboardButton('–í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã')
    func3=types.KeyboardButton('Premium-—Ç–∞—Ä–∏—Ñ')
    func4=types.KeyboardButton('–ë–ª–æ–∫-–ª–∏—Å—Ç')
    func5=types.KeyboardButton('–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞')
    func6=types.KeyboardButton('–ü—Ä–æ–¥–∞–∂–∏ –Ω–∞ –ø–∞—É–∑—É ')
    func7=types.KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤')
    keyboard.add(func1)
    keyboard.row(func2,func3)
    keyboard.row(func4,func5)
    keyboard.row(func6,func7)
    return keyboard


















#keyboard_block
def adddelete_keywords():
    return quick_markup(
        {

        '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞': {'callback_data': f'add_keyword'},'üóë –£–±—Ä–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞':{'callback_data': f'delete_keyword'}
        }, row_width=1
    )































#ban/unban
def block_keyboard(block_id,block_name):
    return quick_markup({

                'üö∑–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞': {'callback_data': f'ban_{block_id}_{block_name}'}}, row_width=1)

def unblock_keyboard(block_id,block_name):
    return quick_markup({

                '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞üîë': {'callback_data': f'unban_{block_id}_{block_name}'}}, row_width=1)


def banlistmarkup(user_id):
    markup = types.InlineKeyboardMarkup(row_width=1)
    blocklist=get_blocked_users(user_id,'dict')

    for items in blocklist.items():

        button_text = f'{items[1]}'
        callback_data = f'unban_{items[0]}_{items[1]}_banlist'

        button = types.InlineKeyboardButton(text=button_text, callback_data=callback_data)
        markup.add(button)

    return markup